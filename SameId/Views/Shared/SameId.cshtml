@{
    Layout = "";
    var users = ViewBag.Users as List<KeyValuePair<string, SameIdAlert.RouteDataItems>>;
    int count = 0;
    if (users != null)
    {
        count = users.Count;
    }

}

<div id="UserViewingThisAction" class="userViewingThisAction" >
    <h1>Users on this page</h1>
     <ul id="UserList" class="userList">
        @if (count > 1) { 
        foreach (var item in users)
        {
            if (item.Key == ViewBag.CurrentUser)
            {
                continue;
            }
         <li id="user_@item.Key"><i>Existing user on this page: </i>@item.Key</li>
        }
        }
    </ul>

    <input type="text" id="Message" class="message"/> <input type="button" id="SendMessage" value="Send message to users" />
   
    <ul id="Discussion"  class="discussion">
        
    </ul>
</div>
 <script>
        $(function () {
            //@count
            @if(count <2){
                
               <text>
            
            $("#UserViewingThisAction").hide();
            
            </text>
                
            }
            
            var myName = '@ViewBag.CurrentUser';
            var groupName= '@ViewBag.GroupName';
            // Reference the auto-generated proxy for the hub.  
            var chat = $.connection.sameIdHub;
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message) {
                // Add the message to the page. 
                $('#Discussion').append('<li><strong>' + htmlEncode(name) 
                    + '</strong>: ' + htmlEncode(message) + '</li>');
            };
            // Set initial focus to message input box.  
            $('#Message').focus();


            chat.client.addUser = function (name) {
                
                // Add the Message to the page. 
                $('#UserList').append('<li id="user_' + name + '"  ><i>new user</i>:' + htmlEncode(name) + '</li>');
                $("#UserViewingThisAction").show();
                
                

            };
            chat.client.removeUser = function (name) {
                
                $("#user_" + name).remove();
                if ($("#UserList li").size() == 0) {
                    $("#UserViewingThisAction").hide();
                }
            }
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#SendMessage').click(function () {
                    // Call the Send method on the hub. 
                    chat.server.sendToPrevious(myName, $('#Message').val(), groupName);
                    // Clear text box and reset focus for next comment. 
                    $('#Message').val('').focus();
                });
                chat.server.joinGroupPageAndSendMessage(myName, groupName);
            });


        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
